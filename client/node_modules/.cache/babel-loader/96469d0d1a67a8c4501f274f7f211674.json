{"remainingRequest":"/Users/wangshaoyu/Desktop/毕业设计/phoenix_menu_network/client/node_modules/babel-loader/lib/index.js!/Users/wangshaoyu/Desktop/毕业设计/phoenix_menu_network/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangshaoyu/Desktop/毕业设计/phoenix_menu_network/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangshaoyu/Desktop/毕业设计/phoenix_menu_network/client/src/views/admin/User.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangshaoyu/Desktop/毕业设计/phoenix_menu_network/client/src/views/admin/User.vue","mtime":1548869528000},{"path":"/Users/wangshaoyu/Desktop/毕业设计/phoenix_menu_network/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangshaoyu/Desktop/毕业设计/phoenix_menu_network/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wangshaoyu/Desktop/毕业设计/phoenix_menu_network/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangshaoyu/Desktop/毕业设计/phoenix_menu_network/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.last-index-of\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      title: '',\n      users: [],\n      roles: [],\n      data: [],\n      dialogTableVisible: false,\n      dialogFormVisible: false,\n      checkSubmit: true,\n      hidden: true,\n      roleChecked: [],\n      checkedRoleId: [],\n      form: {\n        username: '',\n        password: '',\n        englishName: '',\n        chinesehName: '',\n        email: '',\n        role_id: [],\n        comment: ''\n      },\n      user_id: ''\n    };\n  },\n  mounted: function mounted() {\n    this.getUsers();\n    this.getRoles();\n  },\n  methods: {\n    // 拼接多个roles\n    formatter: function formatter(row, column) {\n      var allRole = '';\n\n      for (var i = 0; i < row.roles.length; i++) {\n        allRole += row.roles[i].name + ',';\n      }\n\n      allRole = allRole.substring(0, allRole.lastIndexOf(','));\n      return allRole;\n    },\n    // 提交点击事件\n    Submit: function Submit() {\n      this.dialogFormVisible = false;\n\n      if (this.checkSubmit) {\n        this.createUser();\n      } else {\n        this.updateUser();\n      }\n    },\n    //取消方法\n    Close: function Close() {\n      this.dialogFormVisible = false;\n      this.resetDialog();\n    },\n    // 清空添加框\n    resetDialog: function resetDialog() {\n      this.form.username = '';\n      this.form.password = '';\n      this.form.englishName = '';\n      this.form.chinesehName = '';\n      this.form.email = '';\n      this.form.role_id = [];\n      this.form.comment = '';\n    },\n    // 添加方法\n    addUser: function addUser() {\n      this.title = 'Add User';\n      this.dialogFormVisible = true;\n      this.hidden = true;\n      this.resetDialog();\n    },\n    // 创建用户\n    createUser: function createUser() {\n      var _this = this;\n\n      // 邮箱格式正则\n      var emailValidation = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n      var roles_id = [];\n\n      for (var i = 0; i < this.form.role_id.length; i++) {\n        roles_id.push({\n          id: this.form.role_id[i]\n        });\n      }\n\n      var data = {\n        username: this.form.username,\n        password: this.form.password,\n        englishName: this.form.englishName,\n        chinesehName: this.form.chinesehName,\n        email: this.form.email,\n        roles: roles_id,\n        comment: this.form.comment\n      };\n      this.$axios({\n        url: '/api/v1/users/' + data.username,\n        method: 'get'\n      }).then(function (res) {\n        if (res.data.code == 200) {\n          var findName = res.data.data; // 判断关键值是否为空\n\n          if (data.username && data.password && data.email != '') {\n            // 判断是否有重复用户名\n            if (findName != 200) {\n              // 验证邮箱格式\n              if (emailValidation.test(data.email)) {\n                _this.$axios({\n                  url: '/api/v1/users',\n                  method: 'post',\n                  data: data\n                }).then(function (res) {\n                  if (res.data.code == 200) {\n                    _this.getUsers();\n                  } else {\n                    _this.$router.push({\n                      path: \"/nopermisson\"\n                    });\n                  }\n                });\n              } else {\n                _this.dialogFormVisible = true;\n                alert('Please Input Correct Email Format');\n              }\n            } else {\n              _this.dialogFormVisible = true;\n              alert('Repeat Username, Please Input Again');\n            }\n          } else {\n            _this.dialogFormVisible = true;\n            alert('please Input All Data');\n          }\n        } else {\n          _this.$router.push({\n            path: \"/nopermisson\"\n          });\n        }\n      });\n    },\n    // 复写用户信息\n    copyUser: function copyUser(index, data) {\n      this.title = 'Update User';\n      this.dialogFormVisible = true;\n      this.checkSubmit = false;\n      this.hidden = false;\n      this.user_id = data.id;\n      this.form.englishName = data.englishName;\n      this.form.chinesehName = data.chinesehName;\n      this.form.email = data.email;\n      this.roleChecked = data.roles;\n      this.form.comment = data.comment; // 选择角色\n\n      var role_id = [];\n\n      for (var i = 0; i < data.roles.length; i++) {\n        role_id.push(data.roles[i].id);\n      }\n\n      this.form.role_id = role_id;\n    },\n    // 更新用户\n    updateUser: function updateUser() {\n      var _this2 = this;\n\n      // 邮箱格式正则\n      var emailValidation = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n      var roles_id = [];\n\n      for (var i = 0; i < this.form.role_id.length; i++) {\n        roles_id.push({\n          id: this.form.role_id[i]\n        });\n      }\n\n      var data = {\n        password: this.form.password,\n        englishName: this.form.englishName,\n        chinesehName: this.form.chinesehName,\n        email: this.form.email,\n        roles: roles_id,\n        comment: this.form.comment\n      };\n\n      if (data.email != '') {\n        // 验证邮箱格式\n        if (emailValidation.test(data.email)) {\n          this.$axios({\n            url: '/api/v1/users/' + this.user_id,\n            method: 'put',\n            data: data\n          }).then(function (res) {\n            if (res.data.code == 200) {\n              _this2.getUsers();\n            } else {\n              _this2.$router.push({\n                path: \"/nopermisson\"\n              });\n            }\n          });\n        } else {\n          this.dialogFormVisible = true;\n          alert('Please Input Correct Email Format');\n        }\n      } else {\n        this.dialogFormVisible = true;\n        alert('please Input All Data');\n      }\n    },\n    // 获取用户\n    getUsers: function getUsers() {\n      var _this3 = this;\n\n      this.$axios({\n        url: '/api/v1/users',\n        method: 'get'\n      }).then(function (res) {\n        if (res.data.code == 200) {\n          _this3.users = res.data.data;\n        } else {\n          _this3.$router.push({\n            path: \"/nopermisson\"\n          });\n        }\n      });\n    },\n    // 获取角色\n    getRoles: function getRoles() {\n      var _this4 = this;\n\n      this.$axios({\n        url: '/api/v1/roles',\n        method: 'get'\n      }).then(function (res) {\n        if (res.data.code == 200) {\n          _this4.roles = res.data.data;\n        } else {\n          _this4.$router.push({\n            path: \"/nopermisson\"\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["User.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-container class=\"container\">\n    <el-header class=\"header\">\n      <el-button type=\"primary\" class=\"add\" @click=\"addUser()\">+Add</el-button>\n    </el-header>\n    <el-row>\n      <el-table :data=\"users\" stripe style=\"width: 100%;\">\n        <el-table-column prop=\"id\" label=\"ID\" class-name=\"table_column\"></el-table-column>\n        <el-table-column prop=\"englishName\" label=\"English Name\" class-name=\"table_column\"></el-table-column>\n        <el-table-column prop=\"chinesehName\" label=\"Chinese Name\" class-name=\"table_column\"></el-table-column>\n        <el-table-column prop=\"email\" label=\"Email\" class-name=\"table_column\"></el-table-column>\n        <el-table-column prop=\"roles\" label=\"Role\" class-name=\"table_column\" :formatter='formatter'></el-table-column>\n        <el-table-column prop=\"comment\" label=\"Comment\" class-name=\"table_column\"></el-table-column>\n        <el-table-column label=\"Operation\" class-name=\"table_column\">\n          <template slot-scope=\"scope\">\n            <el-button size=\"small\" @click=\"copyUser(scope.$index,scope.row)\" type=\"warning\" plain>Update</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-row>\n    <!-- 模态框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"dialogFormVisible\" center>\n      <el-form :model=\"form\">\n        <el-form-item v-show=\"hidden\" label=\"Username\" label-width=\"120px\">\n          <el-input v-model=\"form.username\" placeholder=\"Please Input Username\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item v-show=\"hidden\" label=\"Password\" label-width=\"120px\">\n          <el-input type=\"password\" v-model=\"form.password\" placeholder=\"Please Input Passowrd\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"English Name\" label-width=\"120px\">\n          <el-input v-model=\"form.englishName\" placeholder=\"Please Input EnglishName\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Chinese Name\" label-width=\"120px\">\n          <el-input v-model=\"form.chinesehName\" placeholder=\"Please Input ChineseName\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Email\" label-width=\"120px\">\n          <el-input v-model=\"form.email\" type=\"email\" placeholder=\"Please Input Email\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Role\" label-width=\"120px\">\n          <el-checkbox-group v-model=\"form.role_id\">\n            <el-checkbox v-for=\"(role,index) in roles\" :label=\"role.id\" :key=\"index\" border>{{role.name}}</el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n        <el-form-item label=\"Comment\" label-width=\"120px\">\n          <el-input type=\"textarea\" v-model=\"form.comment\" placeholder=\"Please Input Comment\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button :visible.sync=\"checkSubmit\"  type=\"primary\" @click=\"Submit()\">确 定</el-button>\n        <el-button type=\"warning\" @click=\"Close()\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </el-container>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      title: '',\n      users: [],\n      roles: [],\n      data: [],\n      dialogTableVisible: false,\n      dialogFormVisible: false,\n      checkSubmit: true,\n      hidden: true,\n      roleChecked : [],\n      checkedRoleId: [],\n      form: {\n        username: '',\n        password: '',\n        englishName: '',\n        chinesehName: '',\n        email: '',\n        role_id: [],\n        comment: '',\n      },\n      user_id: '',\n    };\n  },\n  mounted(){\n    this.getUsers();\n    this.getRoles();\n  },\n  methods: {\n    // 拼接多个roles\n    formatter(row,column){\n      let allRole = ''\n      for(var i = 0;i<row.roles.length;i++){\n        allRole += row.roles[i].name + ',';\n      }\n      allRole = allRole.substring(0,allRole.lastIndexOf(','));\n      return allRole;\n    },\n    // 提交点击事件\n    Submit(){\n      this.dialogFormVisible = false;\n      if(this.checkSubmit){\n        this.createUser();\n      }else{\n        this.updateUser();\n      }\n    },\n    //取消方法\n    Close() {\n      this.dialogFormVisible = false;\n      this.resetDialog();\n    },\n    // 清空添加框\n    resetDialog() {\n      this.form.username = '';\n      this.form.password = '';\n      this.form.englishName = '';\n      this.form.chinesehName = '';\n      this.form.email = '';\n      this.form.role_id = [];\n      this.form.comment = '';\n    },\n    // 添加方法\n    addUser() {\n      this.title = 'Add User'\n      this.dialogFormVisible = true;\n      this.hidden = true;\n      this.resetDialog();\n    },\n    // 创建用户\n    createUser(){\n      // 邮箱格式正则\n      let emailValidation = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n      let roles_id = [];\n      for(var i = 0; i< this.form.role_id.length; i++){\n        roles_id.push({id: this.form.role_id[i]});\n      }\n      let data ={\n        username: this.form.username,\n        password: this.form.password,\n        englishName: this.form.englishName,\n        chinesehName: this.form.chinesehName,\n        email: this.form.email,\n        roles: roles_id,\n        comment: this.form.comment,\n      };\n      this.$axios({\n        url: '/api/v1/users/' + data.username,\n        method: 'get',\n      }).then(res =>{\n        if(res.data.code == 200){\n          let findName = res.data.data;\n          // 判断关键值是否为空\n          if(data.username && data.password && data.email != ''){\n            // 判断是否有重复用户名\n            if(findName != 200){\n              // 验证邮箱格式\n              if(emailValidation.test(data.email)){\n                this.$axios({\n                  url: '/api/v1/users',\n                  method: 'post',\n                  data: data,\n                }).then(res=>{\n                  if(res.data.code == 200){\n                    this.getUsers();\n                  }else{\n                    this.$router.push({ path: \"/nopermisson\"});\n                  }\n                });\n              }else{\n                this.dialogFormVisible = true;\n                alert('Please Input Correct Email Format')\n              }\n            }else{\n              this.dialogFormVisible = true;\n              alert('Repeat Username, Please Input Again');\n            }\n          }else{\n            this.dialogFormVisible = true;\n            alert('please Input All Data');\n          }\n        }else{\n          this.$router.push({ path: \"/nopermisson\"});\n        }\n      });\n    },\n    // 复写用户信息\n    copyUser(index,data) {\n      this.title = 'Update User'\n      this.dialogFormVisible = true;\n      this.checkSubmit = false;\n      this.hidden = false;\n      this.user_id = data.id;\n      this.form.englishName = data.englishName;\n      this.form.chinesehName = data.chinesehName;\n      this.form.email = data.email;\n      this.roleChecked = data.roles;\n      this.form.comment = data.comment;\n      // 选择角色\n      var role_id = []\n      for(var i = 0;i<data.roles.length;i++){\n        role_id.push(data.roles[i].id)\n      }\n      this.form.role_id=role_id;\n    },\n    // 更新用户\n    updateUser() {\n      // 邮箱格式正则\n      let emailValidation = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n      let roles_id = [];\n      for(var i = 0; i< this.form.role_id.length; i++){\n        roles_id.push({id: this.form.role_id[i]});\n      }\n      let data = {\n        password: this.form.password,\n        englishName: this.form.englishName,\n        chinesehName: this.form.chinesehName,\n        email: this.form.email,\n        roles: roles_id,\n        comment: this.form.comment,\n      };\n      if(data.email != ''){\n        // 验证邮箱格式\n        if(emailValidation.test(data.email)){\n          this.$axios({\n            url: '/api/v1/users/' + this.user_id,\n            method: 'put',\n            data: data,\n          }).then(res=>{\n            if(res.data.code == 200){\n              this.getUsers();\n            }else{\n              this.$router.push({ path: \"/nopermisson\"});\n            }\n          });\n        }else{\n          this.dialogFormVisible = true;\n          alert('Please Input Correct Email Format');\n        }\n      }else{\n        this.dialogFormVisible = true;\n        alert('please Input All Data');\n      }\n    },\n    // 获取用户\n    getUsers() {\n      this.$axios({\n        url: '/api/v1/users',\n        method: 'get',\n      }).then(res=> {\n        if(res.data.code == 200){\n          this.users = res.data.data;\n        }else{\n          this.$router.push({ path: \"/nopermisson\"});\n        }\n      })\n    },\n    // 获取角色\n    getRoles(){\n      this.$axios({\n        url: '/api/v1/roles',\n        method: 'get',\n      }).then(res =>{\n        if(res.data.code == 200){\n          this.roles = res.data.data;\n        }else{\n          this.$router.push({ path: \"/nopermisson\"});\n        }\n      })\n    },\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"../../styles/style.scss\";\n  @import \"../../styles/variables.scss\";\n.container {\n  .header {\n    text-align: right;\n    padding-top: $size10;\n  }\n  /deep/ .table_column{\n    text-align: $position_center;\n  }\n  .input100{\n    width: 100%;\n  }\n}\n</style>\n\n\n\n"],"sourceRoot":"src/views/admin"}]}